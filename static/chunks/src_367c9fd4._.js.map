{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/reflectify/DailyPrompt.tsx"],"sourcesContent":["import type { FC } from 'react';\n\ninterface DailyPromptProps {\n  prompt: string;\n}\n\nconst DailyPrompt: FC<DailyPromptProps> = ({ prompt }) => {\n  return (\n    <p className=\"text-lg text-foreground leading-relaxed\">\n      {prompt || \"Loading today's prompt...\"}\n    </p>\n  );\n};\n\nexport default DailyPrompt;\n"],"names":[],"mappings":";;;;;AAMA,MAAM,cAAoC,CAAC,EAAE,MAAM,EAAE;IACnD,qBACE,6LAAC;QAAE,WAAU;kBACV,UAAU;;;;;;AAGjB;KANM;uCAQS","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/reflectify/JournalEditor.tsx"],"sourcesContent":["'use client';\nimport type { FC } from 'react';\nimport { useState } from 'react';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Button } from '@/components/ui/button';\nimport { Loader2, Send } from 'lucide-react';\n\ninterface JournalEditorProps {\n  onSubmit: (entryText: string) => Promise<void>;\n  isLoading: boolean;\n}\n\nconst JournalEditor: FC<JournalEditorProps> = ({ onSubmit, isLoading }) => {\n  const [text, setText] = useState('');\n\n  const handleSubmit = async () => {\n    if (text.trim()) {\n      await onSubmit(text);\n      setText(''); // Clear textarea after submission\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Textarea\n        placeholder=\"Pour your thoughts here... What's on your mind?\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        rows={10}\n        className=\"resize-none text-base leading-relaxed shadow-sm focus:ring-2 focus:ring-ring\"\n        aria-label=\"Journaling Space\"\n      />\n      <Button \n        onClick={handleSubmit} \n        disabled={isLoading || !text.trim()} \n        className=\"self-start bg-accent text-accent-foreground hover:bg-accent/90 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-2 px-6 py-3 text-base rounded-lg shadow-md transition-all duration-150 ease-in-out hover:shadow-lg\"\n        aria-label=\"Submit Journal Entry\"\n      >\n        {isLoading ? (\n          <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n        ) : (\n          <Send className=\"mr-2 h-5 w-5\" />\n        )}\n        Analyze & Save Journal\n      </Button>\n    </div>\n  );\n};\n\nexport default JournalEditor;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;;;AALA;;;;;AAYA,MAAM,gBAAwC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;;IACpE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,eAAe;QACnB,IAAI,KAAK,IAAI,IAAI;YACf,MAAM,SAAS;YACf,QAAQ,KAAK,kCAAkC;QACjD;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,uIAAA,CAAA,WAAQ;gBACP,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gBACvC,MAAM;gBACN,WAAU;gBACV,cAAW;;;;;;0BAEb,6LAAC,qIAAA,CAAA,SAAM;gBACL,SAAS;gBACT,UAAU,aAAa,CAAC,KAAK,IAAI;gBACjC,WAAU;gBACV,cAAW;;oBAEV,0BACC,6LAAC,oNAAA,CAAA,UAAO;wBAAC,WAAU;;;;;6CAEnB,6LAAC,qMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;oBAChB;;;;;;;;;;;;;AAKV;GAnCM;KAAA;uCAqCS","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/reflectify/SentimentDisplay.tsx"],"sourcesContent":["import type { FC } from 'react';\nimport { Badge } from '@/components/ui/badge';\nimport { TrendingUp, TrendingDown, MinusCircle } from 'lucide-react';\n\ninterface SentimentDisplayProps {\n  sentiment?: string;\n  score?: number;\n}\n\nconst SentimentDisplay: FC<SentimentDisplayProps> = ({ sentiment, score }) => {\n  if (sentiment === undefined || score === undefined) {\n    return <p className=\"text-muted-foreground\">Sentiment analysis not available yet.</p>;\n  }\n\n  let sentimentIcon;\n  let badgeVariant: \"default\" | \"destructive\" | \"secondary\" = \"secondary\";\n  let scoreColorClass = \"text-muted-foreground\";\n\n  if (sentiment.toLowerCase() === 'positive') {\n    sentimentIcon = <TrendingUp className=\"mr-2 h-5 w-5 text-green-500\" />;\n    badgeVariant = \"default\"; // Using default for positive might be blue, consider custom or success variant\n    scoreColorClass = \"text-green-600 dark:text-green-400\";\n  } else if (sentiment.toLowerCase() === 'negative') {\n    sentimentIcon = <TrendingDown className=\"mr-2 h-5 w-5 text-red-500\" />;\n    badgeVariant = \"destructive\";\n    scoreColorClass = \"text-red-600 dark:text-red-400\";\n  } else {\n    sentimentIcon = <MinusCircle className=\"mr-2 h-5 w-5 text-yellow-500\" />;\n    badgeVariant = \"secondary\";\n    scoreColorClass = \"text-yellow-600 dark:text-yellow-400\";\n  }\n  \n  // Custom badge color for positive to make it green\n  const badgeStyle = sentiment.toLowerCase() === 'positive' ? { backgroundColor: 'hsl(var(--accent))', color: 'hsl(var(--accent-foreground))' } : {};\n\n\n  return (\n    <div className=\"flex flex-col sm:flex-row sm:items-center gap-4 p-4 bg-card rounded-lg shadow\">\n      <div className=\"flex items-center\">\n        {sentimentIcon}\n        <Badge variant={badgeVariant} style={badgeStyle} className=\"text-sm capitalize px-3 py-1\">\n          {sentiment}\n        </Badge>\n      </div>\n      <div className=\"flex items-baseline gap-2\">\n        <span className=\"text-sm text-muted-foreground\">Sentiment Score:</span>\n        <span className={`text-lg font-semibold ${scoreColorClass}`}>\n          {score.toFixed(2)}\n        </span>\n         <span className=\"text-xs text-muted-foreground\"> (from -1 to 1)</span>\n      </div>\n    </div>\n  );\n};\n\nexport default SentimentDisplay;\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;;;;AAOA,MAAM,mBAA8C,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IACvE,IAAI,cAAc,aAAa,UAAU,WAAW;QAClD,qBAAO,6LAAC;YAAE,WAAU;sBAAwB;;;;;;IAC9C;IAEA,IAAI;IACJ,IAAI,eAAwD;IAC5D,IAAI,kBAAkB;IAEtB,IAAI,UAAU,WAAW,OAAO,YAAY;QAC1C,8BAAgB,6LAAC,qNAAA,CAAA,aAAU;YAAC,WAAU;;;;;;QACtC,eAAe,WAAW,+EAA+E;QACzG,kBAAkB;IACpB,OAAO,IAAI,UAAU,WAAW,OAAO,YAAY;QACjD,8BAAgB,6LAAC,yNAAA,CAAA,eAAY;YAAC,WAAU;;;;;;QACxC,eAAe;QACf,kBAAkB;IACpB,OAAO;QACL,8BAAgB,6LAAC,uNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;QACvC,eAAe;QACf,kBAAkB;IACpB;IAEA,mDAAmD;IACnD,MAAM,aAAa,UAAU,WAAW,OAAO,aAAa;QAAE,iBAAiB;QAAsB,OAAO;IAAgC,IAAI,CAAC;IAGjJ,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;oBACZ;kCACD,6LAAC,oIAAA,CAAA,QAAK;wBAAC,SAAS;wBAAc,OAAO;wBAAY,WAAU;kCACxD;;;;;;;;;;;;0BAGL,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAgC;;;;;;kCAChD,6LAAC;wBAAK,WAAW,CAAC,sBAAsB,EAAE,iBAAiB;kCACxD,MAAM,OAAO,CAAC;;;;;;kCAEhB,6LAAC;wBAAK,WAAU;kCAAgC;;;;;;;;;;;;;;;;;;AAIzD;KA5CM;uCA8CS","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/reflectify/ProgressChart.tsx"],"sourcesContent":["'use client';\nimport type { FC } from 'react';\nimport { Bar, BarChart, CartesianGrid, ResponsiveContainer, XAxis, YAxis, Tooltip as RechartsTooltip } from 'recharts';\nimport { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart';\nimport type { ChartDataPoint } from '@/types';\nimport { Frown, Meh, Smile } from 'lucide-react';\n\ninterface ProgressChartProps {\n  data: ChartDataPoint[];\n}\n\nconst chartConfig = {\n  sentimentScore: {\n    label: 'Sentiment Score',\n    color: 'hsl(var(--accent))', // Muted Green\n  },\n} satisfies ChartConfig;\n\nconst ProgressChart: FC<ProgressChartProps> = ({ data }) => {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-64 text-center p-6 border-2 border-dashed rounded-lg bg-muted/50\">\n        <Smile className=\"w-12 h-12 text-muted-foreground mb-4\" />\n        <h3 className=\"text-lg font-medium text-foreground mb-1\">No entries yet!</h3>\n        <p className=\"text-sm text-muted-foreground\">\n          Start journaling to see your sentiment trends over time.\n        </p>\n      </div>\n    );\n  }\n  \n  // Ensure Y-axis always shows -1 to 1 range even if data is limited\n  const yAxisDomain = [-1, 1];\n\n  return (\n    <div className=\"h-[300px] w-full\">\n      <ChartContainer config={chartConfig} className=\"w-full h-full\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart data={data} margin={{ top: 5, right: 20, left: -20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} stroke=\"hsl(var(--border)/0.5)\" />\n            <XAxis\n              dataKey=\"date\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              tickFormatter={(value) => value.slice(0,6)} // Example: \"Jan 01\"\n              className=\"text-xs\"\n            />\n            <YAxis \n              domain={yAxisDomain} \n              ticks={[-1, -0.5, 0, 0.5, 1]}\n              tickFormatter={(value) => value.toFixed(1)}\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              className=\"text-xs\"\n            />\n            <ChartTooltip\n              cursor={false}\n              content={<ChartTooltipContent \n                labelFormatter={(value, payload) => {\n                  if (payload && payload.length > 0 && payload[0].payload.name) {\n                    return payload[0].payload.name;\n                  }\n                  return value;\n                }}\n                indicator=\"dot\" \n              />}\n            />\n            <Bar \n              dataKey=\"sentimentScore\" \n              fill=\"var(--color-sentimentScore)\" \n              radius={4} \n              barSize={Math.max(10, 250 / data.length)} // Dynamic bar size\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n       <div className=\"flex justify-between text-xs text-muted-foreground mt-2 px-2\">\n        <div className=\"flex items-center gap-1\"><Frown className=\"w-3.5 h-3.5\"/> Negative</div>\n        <div className=\"flex items-center gap-1\"><Meh className=\"w-3.5 h-3.5\"/> Neutral</div>\n        <div className=\"flex items-center gap-1\"><Smile className=\"w-3.5 h-3.5\"/> Positive</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressChart;\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AALA;;;;;AAWA,MAAM,cAAc;IAClB,gBAAgB;QACd,OAAO;QACP,OAAO;IACT;AACF;AAEA,MAAM,gBAAwC,CAAC,EAAE,IAAI,EAAE;IACrD,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,uMAAA,CAAA,QAAK;oBAAC,WAAU;;;;;;8BACjB,6LAAC;oBAAG,WAAU;8BAA2C;;;;;;8BACzD,6LAAC;oBAAE,WAAU;8BAAgC;;;;;;;;;;;;IAKnD;IAEA,mEAAmE;IACnE,MAAM,cAAc;QAAC,CAAC;QAAG;KAAE;IAE3B,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,oIAAA,CAAA,iBAAc;gBAAC,QAAQ;gBAAa,WAAU;0BAC7C,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;oBAAC,OAAM;oBAAO,QAAO;8BACvC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;wBAAC,MAAM;wBAAM,QAAQ;4BAAE,KAAK;4BAAG,OAAO;4BAAI,MAAM,CAAC;4BAAI,QAAQ;wBAAE;;0CACtE,6LAAC,gKAAA,CAAA,gBAAa;gCAAC,iBAAgB;gCAAM,UAAU;gCAAO,QAAO;;;;;;0CAC7D,6LAAC,wJAAA,CAAA,QAAK;gCACJ,SAAQ;gCACR,UAAU;gCACV,UAAU;gCACV,YAAY;gCACZ,eAAe,CAAC,QAAU,MAAM,KAAK,CAAC,GAAE;gCACxC,WAAU;;;;;;0CAEZ,6LAAC,wJAAA,CAAA,QAAK;gCACJ,QAAQ;gCACR,OAAO;oCAAC,CAAC;oCAAG,CAAC;oCAAK;oCAAG;oCAAK;iCAAE;gCAC5B,eAAe,CAAC,QAAU,MAAM,OAAO,CAAC;gCACxC,UAAU;gCACV,UAAU;gCACV,YAAY;gCACZ,WAAU;;;;;;0CAEZ,6LAAC,oIAAA,CAAA,eAAY;gCACX,QAAQ;gCACR,uBAAS,6LAAC,oIAAA,CAAA,sBAAmB;oCAC3B,gBAAgB,CAAC,OAAO;wCACtB,IAAI,WAAW,QAAQ,MAAM,GAAG,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE;4CAC5D,OAAO,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI;wCAChC;wCACA,OAAO;oCACT;oCACA,WAAU;;;;;;;;;;;0CAGd,6LAAC,sJAAA,CAAA,MAAG;gCACF,SAAQ;gCACR,MAAK;gCACL,QAAQ;gCACR,SAAS,KAAK,GAAG,CAAC,IAAI,MAAM,KAAK,MAAM;;;;;;;;;;;;;;;;;;;;;;0BAK9C,6LAAC;gBAAI,WAAU;;kCACd,6LAAC;wBAAI,WAAU;;0CAA0B,6LAAC,uMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;4BAAe;;;;;;;kCACzE,6LAAC;wBAAI,WAAU;;0CAA0B,6LAAC,mMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;4BAAe;;;;;;;kCACvE,6LAAC;wBAAI,WAAU;;0CAA0B,6LAAC,uMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;4BAAe;;;;;;;;;;;;;;;;;;;AAIjF;KAnEM;uCAqES","debugId":null}},
    {"offset": {"line": 1096, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/prompts.ts"],"sourcesContent":["export const prompts: string[] = [\n  \"What are you most grateful for today, and why?\",\n  \"Describe a small act of kindness you witnessed or performed recently. How did it make you feel?\",\n  \"What challenge did you face today, and how did you navigate it?\",\n  \"What is one new thing you learned or discovered today, about yourself or the world?\",\n  \"In what ways did you prioritize your well-being today?\",\n  \"What moment today brought you a sense of peace or joy?\",\n  \"What are your top one or two priorities for tomorrow, and what steps can you take towards them?\",\n  \"Reflect on a recent success, no matter how small. What did you learn from it?\",\n  \"If you could offer your younger self one piece of advice based on today, what would it be?\",\n  \"Describe a moment when you felt truly present and engaged with your surroundings.\",\n  \"What is a limiting belief you're working to overcome?\",\n  \"How can you show more compassion to yourself and others tomorrow?\",\n  \"What are you looking forward to this week?\",\n  \"Describe something beautiful you noticed today.\",\n  \"What skill are you currently trying to develop or improve?\"\n];\n"],"names":[],"mappings":";;;AAAO,MAAM,UAAoB;IAC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD","debugId":null}},
    {"offset": {"line": 1125, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analyze-sentiment.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Analyzes the sentiment of journal entries using AI.\n *\n * - analyzeSentiment - A function that analyzes the sentiment of journal entries.\n * - AnalyzeSentimentInput - The input type for the analyzeSentiment function.\n * - AnalyzeSentimentOutput - The return type for the analyzeSentiment function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnalyzeSentimentInputSchema = z.object({\n  journalEntry: z.string().describe('The journal entry to analyze.'),\n});\nexport type AnalyzeSentimentInput = z.infer<typeof AnalyzeSentimentInputSchema>;\n\nconst AnalyzeSentimentOutputSchema = z.object({\n  sentiment: z\n    .string()\n    .describe(\n      'The sentiment of the journal entry (e.g., positive, negative, neutral).'\n    ),\n  score: z.number().describe('The sentiment score of the journal entry (-1 to 1).'),\n});\nexport type AnalyzeSentimentOutput = z.infer<typeof AnalyzeSentimentOutputSchema>;\n\nexport async function analyzeSentiment(input: AnalyzeSentimentInput): Promise<AnalyzeSentimentOutput> {\n  return analyzeSentimentFlow(input);\n}\n\nconst analyzeSentimentPrompt = ai.definePrompt({\n  name: 'analyzeSentimentPrompt',\n  input: {schema: AnalyzeSentimentInputSchema},\n  output: {schema: AnalyzeSentimentOutputSchema},\n  prompt: `Analyze the sentiment of the following journal entry. Return the sentiment as a string (positive, negative, or neutral) and a sentiment score between -1 and 1.\n\nJournal Entry: {{{journalEntry}}}`,\n});\n\nconst analyzeSentimentFlow = ai.defineFlow(\n  {\n    name: 'analyzeSentimentFlow',\n    inputSchema: AnalyzeSentimentInputSchema,\n    outputSchema: AnalyzeSentimentOutputSchema,\n  },\n  async input => {\n    const {output} = await analyzeSentimentPrompt(input);\n    return output!;\n  }\n);\n\n"],"names":[],"mappings":";;;;;IA2BsB","debugId":null}},
    {"offset": {"line": 1137, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\nimport DailyPrompt from '@/components/reflectify/DailyPrompt';\nimport JournalEditor from '@/components/reflectify/JournalEditor';\nimport SentimentDisplay from '@/components/reflectify/SentimentDisplay';\nimport ProgressChart from '@/components/reflectify/ProgressChart';\nimport { prompts } from '@/lib/prompts';\nimport type { JournalEntry, ChartDataPoint } from '@/types';\nimport { analyzeSentiment, type AnalyzeSentimentOutput } from '@/ai/flows/analyze-sentiment';\nimport { format, parseISO, startOfWeek, endOfWeek, eachDayOfInterval, subDays } from 'date-fns';\n\nconst JOURNAL_HISTORY_KEY = 'reflectifyJournalHistory';\n\nexport default function ReflectifyPage() {\n  const [currentPrompt, setCurrentPrompt] = useState<string>('');\n  const [currentSentiment, setCurrentSentiment] = useState<AnalyzeSentimentOutput | null>(null);\n  const [journalHistory, setJournalHistory] = useState<JournalEntry[]>([]);\n  const [isLoadingAi, setIsLoadingAi] = useState<boolean>(false);\n  const [chartData, setChartData] = useState<ChartDataPoint[]>([]);\n  const { toast } = useToast();\n\n  // Load daily prompt\n  useEffect(() => {\n    const today = new Date();\n    // Using day of year for prompt selection to ensure it changes daily\n    const start = new Date(today.getFullYear(), 0, 0);\n    const diff = today.getTime() - start.getTime();\n    const oneDay = 1000 * 60 * 60 * 24;\n    const dayOfYear = Math.floor(diff / oneDay);\n    setCurrentPrompt(prompts[dayOfYear % prompts.length]);\n  }, []);\n\n  // Load journal history from localStorage\n  useEffect(() => {\n    try {\n      const storedHistory = localStorage.getItem(JOURNAL_HISTORY_KEY);\n      if (storedHistory) {\n        setJournalHistory(JSON.parse(storedHistory));\n      }\n    } catch (error) {\n      console.error(\"Failed to load journal history from localStorage:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Could not load your journal history.\",\n        variant: \"destructive\",\n      });\n    }\n  }, [toast]);\n\n  // Update chart data when journal history changes\n  useEffect(() => {\n    const today = new Date();\n    // Display last 7 days, including today\n    const dateInterval = eachDayOfInterval({\n      start: subDays(today, 6),\n      end: today\n    });\n    \n    const dataForChart = dateInterval.map(date => {\n      const isoDateString = date.toISOString().split('T')[0]; // YYYY-MM-DD\n      const entryForDay = journalHistory.find(entry => entry.date.startsWith(isoDateString));\n      return {\n        date: format(date, 'MMM dd'), // Format for X-axis label\n        name: format(date, 'EEEE, MMM dd, yyyy'), // Full date for tooltip\n        sentimentScore: entryForDay?.sentimentAnalysis?.score ?? null,\n      };\n    });\n    setChartData(dataForChart);\n  }, [journalHistory]);\n\n\n  const handleJournalSubmit = useCallback(async (entryText: string) => {\n    setIsLoadingAi(true);\n    setCurrentSentiment(null);\n    try {\n      const sentimentResult = await analyzeSentiment({ journalEntry: entryText });\n      setCurrentSentiment(sentimentResult);\n\n      const newEntry: JournalEntry = {\n        id: new Date().toISOString(),\n        date: new Date().toISOString(),\n        prompt: currentPrompt,\n        entryText,\n        sentimentAnalysis: sentimentResult,\n      };\n\n      setJournalHistory(prevHistory => {\n        const updatedHistory = [newEntry, ...prevHistory];\n        try {\n          localStorage.setItem(JOURNAL_HISTORY_KEY, JSON.stringify(updatedHistory));\n        } catch (error) {\n          console.error(\"Failed to save journal history to localStorage:\", error);\n          toast({\n            title: \"Storage Error\",\n            description: \"Could not save your journal entry due to storage limitations.\",\n            variant: \"destructive\",\n          });\n        }\n        return updatedHistory;\n      });\n\n      toast({\n        title: 'Journal Saved',\n        description: 'Your thoughts and sentiment have been recorded.',\n      });\n    } catch (error) {\n      console.error('Error analyzing sentiment or saving journal:', error);\n      toast({\n        title: 'Error',\n        description: 'Could not analyze sentiment or save your journal. Please try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoadingAi(false);\n    }\n  }, [currentPrompt, toast]);\n\n  return (\n    <div className=\"container mx-auto max-w-3xl py-8 px-4 flex flex-col gap-8\">\n      <Card className=\"shadow-lg rounded-xl overflow-hidden\">\n        <CardHeader className=\"bg-primary/30\">\n          <CardTitle className=\"text-xl font-semibold text-primary-foreground\">\n            My Goal\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"pt-6\">\n          <DailyPrompt prompt={currentPrompt} />\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-lg rounded-xl overflow-hidden\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold text-foreground\">\n            My Thoughts & Feelings\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <JournalEditor\n            onSubmit={handleJournalSubmit}\n            isLoading={isLoadingAi}\n          />\n        </CardContent>\n      </Card>\n\n      {currentSentiment && (\n        <Card className=\"shadow-lg rounded-xl overflow-hidden\">\n          <CardHeader>\n            <CardTitle className=\"text-xl font-semibold text-foreground\">\n              Sentiment Analysis\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <SentimentDisplay\n              sentiment={currentSentiment.sentiment}\n              score={currentSentiment.score}\n            />\n          </CardContent>\n        </Card>\n      )}\n\n      <Card className=\"shadow-lg rounded-xl overflow-hidden\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold text-foreground\">\n            My Sentiment Trend (Last 7 Days)\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ProgressChart data={chartData} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;0BAET,8OAAC,kKAAA,CAAA,QAAqB;gBAAC,WAAU;0BAC/B,cAAA,8OAAC,kKAAA,CAAA,QAAqB;oBAAC,WAAU;;;;;;;;;;;0BAEnC,8OAAC,kKAAA,CAAA,QAAqB;gBAAC,WAAU;;;;;;;;;;;;AAGrC,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/reflectify/JournalEditor.tsx"],"sourcesContent":["'use client';\nimport type { FC } from 'react';\nimport { Textarea } from '@/components/ui/textarea';\n\ninterface JournalEditorProps {\n  value: string;\n  onChange: (value: string) => void;\n  isLoading?: boolean; // Optional, if specific loading state for textarea is needed\n  placeholder?: string;\n}\n\nconst JournalEditor: FC<JournalEditorProps> = ({ value, onChange, isLoading, placeholder }) => {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Textarea\n        placeholder={placeholder || \"Pour your thoughts here... What's on your mind?\"}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        rows={8} // Adjusted rows\n        className=\"resize-none text-base leading-relaxed shadow-sm focus:ring-2 focus:ring-ring\"\n        aria-label=\"Journaling Space\"\n        disabled={isLoading}\n      />\n    </div>\n  );\n};\n\nexport default JournalEditor;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAWA,MAAM,gBAAwC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE;IACxF,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,oIAAA,CAAA,WAAQ;YACP,aAAa,eAAe;YAC5B,OAAO;YACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;YACxC,MAAM;YACN,WAAU;YACV,cAAW;YACX,UAAU;;;;;;;;;;;AAIlB;uCAEe","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/reflectify/SentimentDisplay.tsx"],"sourcesContent":["import type { FC } from 'react';\nimport { Badge } from '@/components/ui/badge';\nimport { TrendingUp, TrendingDown, MinusCircle } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface SentimentDisplayProps {\n  sentiment?: string;\n  score?: number;\n}\n\nconst SentimentDisplay: FC<SentimentDisplayProps> = ({ sentiment, score }) => {\n  if (sentiment === undefined || score === undefined) {\n    return <p className=\"text-muted-foreground\">Sentiment analysis not available yet.</p>;\n  }\n\n  let sentimentIcon;\n  let badgeVariant: \"default\" | \"destructive\" | \"secondary\" = \"secondary\";\n  let scoreColorClass = \"text-foreground\"; \n  let iconColorClass = \"text-muted-foreground\";\n\n  if (sentiment.toLowerCase() === 'positive') {\n    iconColorClass = \"text-accent\";\n    sentimentIcon = <TrendingUp className={cn(\"mr-2 h-5 w-5\", iconColorClass)} />;\n    badgeVariant = \"default\"; \n    scoreColorClass = \"text-accent\";\n  } else if (sentiment.toLowerCase() === 'negative') {\n    iconColorClass = \"text-destructive\";\n    sentimentIcon = <TrendingDown className={cn(\"mr-2 h-5 w-5\", iconColorClass)} />;\n    badgeVariant = \"destructive\";\n    scoreColorClass = \"text-destructive\";\n  } else { // Neutral\n    iconColorClass = \"text-muted-foreground\"; \n    sentimentIcon = <MinusCircle className={cn(\"mr-2 h-5 w-5\", iconColorClass)} />;\n    badgeVariant = \"secondary\";\n    scoreColorClass = \"text-foreground\"; \n  }\n  \n  const badgeStyle = sentiment.toLowerCase() === 'positive' \n    ? { backgroundColor: 'hsl(var(--accent))', color: 'hsl(var(--accent-foreground))' } \n    : {};\n\n\n  return (\n    <div className=\"flex flex-col sm:flex-row sm:items-center gap-4 p-4 bg-card rounded-lg shadow\">\n      <div className=\"flex items-center\">\n        {sentimentIcon}\n        <Badge variant={badgeVariant} style={badgeStyle} className=\"text-sm capitalize px-3 py-1\">\n          {sentiment}\n        </Badge>\n      </div>\n      <div className=\"flex items-baseline gap-2\">\n        <span className=\"text-sm text-muted-foreground\">Sentiment Score:</span>\n        <span className={cn(\"text-lg font-semibold\", scoreColorClass)}>\n          {score.toFixed(2)}\n        </span>\n         <span className=\"text-xs text-muted-foreground\"> (from -1 to 1)</span>\n      </div>\n    </div>\n  );\n};\n\nexport default SentimentDisplay;\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AACA;;;;;AAOA,MAAM,mBAA8C,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IACvE,IAAI,cAAc,aAAa,UAAU,WAAW;QAClD,qBAAO,8OAAC;YAAE,WAAU;sBAAwB;;;;;;IAC9C;IAEA,IAAI;IACJ,IAAI,eAAwD;IAC5D,IAAI,kBAAkB;IACtB,IAAI,iBAAiB;IAErB,IAAI,UAAU,WAAW,OAAO,YAAY;QAC1C,iBAAiB;QACjB,8BAAgB,8OAAC,kNAAA,CAAA,aAAU;YAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;;;;;;QAC1D,eAAe;QACf,kBAAkB;IACpB,OAAO,IAAI,UAAU,WAAW,OAAO,YAAY;QACjD,iBAAiB;QACjB,8BAAgB,8OAAC,sNAAA,CAAA,eAAY;YAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;;;;;;QAC5D,eAAe;QACf,kBAAkB;IACpB,OAAO;QACL,iBAAiB;QACjB,8BAAgB,8OAAC,oNAAA,CAAA,cAAW;YAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;;;;;;QAC3D,eAAe;QACf,kBAAkB;IACpB;IAEA,MAAM,aAAa,UAAU,WAAW,OAAO,aAC3C;QAAE,iBAAiB;QAAsB,OAAO;IAAgC,IAChF,CAAC;IAGL,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;oBACZ;kCACD,8OAAC,iIAAA,CAAA,QAAK;wBAAC,SAAS;wBAAc,OAAO;wBAAY,WAAU;kCACxD;;;;;;;;;;;;0BAGL,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAgC;;;;;;kCAChD,8OAAC;wBAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;kCAC1C,MAAM,OAAO,CAAC;;;;;;kCAEhB,8OAAC;wBAAK,WAAU;kCAAgC;;;;;;;;;;;;;;;;;;AAIzD;uCAEe","debugId":null}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 892, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/reflectify/ProgressChart.tsx"],"sourcesContent":["'use client';\nimport type { FC } from 'react';\nimport { Bar, BarChart, CartesianGrid, ResponsiveContainer, XAxis, YAxis, Tooltip as RechartsTooltip } from 'recharts';\nimport { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart';\nimport type { ChartDataPoint } from '@/types';\nimport { Frown, Meh, Smile } from 'lucide-react';\n\ninterface ProgressChartProps {\n  data: ChartDataPoint[];\n}\n\nconst chartConfig = {\n  sentimentScore: {\n    label: 'Sentiment Score',\n    color: 'hsl(var(--accent))', // Muted Green\n  },\n} satisfies ChartConfig;\n\nconst ProgressChart: FC<ProgressChartProps> = ({ data }) => {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-64 text-center p-6 border-2 border-dashed rounded-lg bg-muted/50\">\n        <Smile className=\"w-12 h-12 text-muted-foreground mb-4\" />\n        <h3 className=\"text-lg font-medium text-foreground mb-1\">No entries yet!</h3>\n        <p className=\"text-sm text-muted-foreground\">\n          Start journaling to see your sentiment trends over time.\n        </p>\n      </div>\n    );\n  }\n  \n  // Ensure Y-axis always shows -1 to 1 range even if data is limited\n  const yAxisDomain = [-1, 1];\n\n  return (\n    <div className=\"h-[300px] w-full\">\n      <ChartContainer config={chartConfig} className=\"w-full h-full\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart data={data} margin={{ top: 5, right: 20, left: -20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} stroke=\"hsl(var(--border)/0.5)\" />\n            <XAxis\n              dataKey=\"date\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              tickFormatter={(value) => value.slice(0,6)} // Example: \"Jan 01\"\n              className=\"text-xs\"\n            />\n            <YAxis \n              domain={yAxisDomain} \n              ticks={[-1, -0.5, 0, 0.5, 1]}\n              tickFormatter={(value) => value.toFixed(1)}\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              className=\"text-xs\"\n            />\n            <ChartTooltip\n              cursor={false}\n              content={<ChartTooltipContent \n                labelFormatter={(value, payload) => {\n                  if (payload && payload.length > 0 && payload[0].payload.name) {\n                    return payload[0].payload.name;\n                  }\n                  return value;\n                }}\n                indicator=\"dot\" \n              />}\n            />\n            <Bar \n              dataKey=\"sentimentScore\" \n              fill=\"var(--color-sentimentScore)\" \n              radius={4} \n              barSize={Math.max(10, 250 / data.length)} // Dynamic bar size\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n       <div className=\"flex justify-between text-xs text-muted-foreground mt-2 px-2\">\n        <div className=\"flex items-center gap-1\"><Frown className=\"w-3.5 h-3.5\"/> Negative</div>\n        <div className=\"flex items-center gap-1\"><Meh className=\"w-3.5 h-3.5\"/> Neutral</div>\n        <div className=\"flex items-center gap-1\"><Smile className=\"w-3.5 h-3.5\"/> Positive</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressChart;\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AALA;;;;;AAWA,MAAM,cAAc;IAClB,gBAAgB;QACd,OAAO;QACP,OAAO;IACT;AACF;AAEA,MAAM,gBAAwC,CAAC,EAAE,IAAI,EAAE;IACrD,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC,oMAAA,CAAA,QAAK;oBAAC,WAAU;;;;;;8BACjB,8OAAC;oBAAG,WAAU;8BAA2C;;;;;;8BACzD,8OAAC;oBAAE,WAAU;8BAAgC;;;;;;;;;;;;IAKnD;IAEA,mEAAmE;IACnE,MAAM,cAAc;QAAC,CAAC;QAAG;KAAE;IAE3B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,iIAAA,CAAA,iBAAc;gBAAC,QAAQ;gBAAa,WAAU;0BAC7C,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;oBAAC,OAAM;oBAAO,QAAO;8BACvC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;wBAAC,MAAM;wBAAM,QAAQ;4BAAE,KAAK;4BAAG,OAAO;4BAAI,MAAM,CAAC;4BAAI,QAAQ;wBAAE;;0CACtE,8OAAC,6JAAA,CAAA,gBAAa;gCAAC,iBAAgB;gCAAM,UAAU;gCAAO,QAAO;;;;;;0CAC7D,8OAAC,qJAAA,CAAA,QAAK;gCACJ,SAAQ;gCACR,UAAU;gCACV,UAAU;gCACV,YAAY;gCACZ,eAAe,CAAC,QAAU,MAAM,KAAK,CAAC,GAAE;gCACxC,WAAU;;;;;;0CAEZ,8OAAC,qJAAA,CAAA,QAAK;gCACJ,QAAQ;gCACR,OAAO;oCAAC,CAAC;oCAAG,CAAC;oCAAK;oCAAG;oCAAK;iCAAE;gCAC5B,eAAe,CAAC,QAAU,MAAM,OAAO,CAAC;gCACxC,UAAU;gCACV,UAAU;gCACV,YAAY;gCACZ,WAAU;;;;;;0CAEZ,8OAAC,iIAAA,CAAA,eAAY;gCACX,QAAQ;gCACR,uBAAS,8OAAC,iIAAA,CAAA,sBAAmB;oCAC3B,gBAAgB,CAAC,OAAO;wCACtB,IAAI,WAAW,QAAQ,MAAM,GAAG,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE;4CAC5D,OAAO,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI;wCAChC;wCACA,OAAO;oCACT;oCACA,WAAU;;;;;;;;;;;0CAGd,8OAAC,mJAAA,CAAA,MAAG;gCACF,SAAQ;gCACR,MAAK;gCACL,QAAQ;gCACR,SAAS,KAAK,GAAG,CAAC,IAAI,MAAM,KAAK,MAAM;;;;;;;;;;;;;;;;;;;;;;0BAK9C,8OAAC;gBAAI,WAAU;;kCACd,8OAAC;wBAAI,WAAU;;0CAA0B,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;4BAAe;;;;;;;kCACzE,8OAAC;wBAAI,WAAU;;0CAA0B,8OAAC,gMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;4BAAe;;;;;;;kCACvE,8OAAC;wBAAI,WAAU;;0CAA0B,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;4BAAe;;;;;;;;;;;;;;;;;;;AAIjF;uCAEe","debugId":null}},
    {"offset": {"line": 1135, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analyze-sentiment.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Analyzes the sentiment of journal entries using AI.\n *\n * - analyzeSentiment - A function that analyzes the sentiment of journal entries.\n * - AnalyzeSentimentInput - The input type for the analyzeSentiment function.\n * - AnalyzeSentimentOutput - The return type for the analyzeSentiment function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnalyzeSentimentInputSchema = z.object({\n  journalEntry: z.string().describe('The journal entry to analyze.'),\n});\nexport type AnalyzeSentimentInput = z.infer<typeof AnalyzeSentimentInputSchema>;\n\nconst AnalyzeSentimentOutputSchema = z.object({\n  sentiment: z\n    .string()\n    .describe(\n      'The sentiment of the journal entry (e.g., positive, negative, neutral).'\n    ),\n  score: z.number().describe('The sentiment score of the journal entry (-1 to 1).'),\n});\nexport type AnalyzeSentimentOutput = z.infer<typeof AnalyzeSentimentOutputSchema>;\n\nexport async function analyzeSentiment(input: AnalyzeSentimentInput): Promise<AnalyzeSentimentOutput> {\n  return analyzeSentimentFlow(input);\n}\n\nconst analyzeSentimentPrompt = ai.definePrompt({\n  name: 'analyzeSentimentPrompt',\n  input: {schema: AnalyzeSentimentInputSchema},\n  output: {schema: AnalyzeSentimentOutputSchema},\n  prompt: `Analyze the sentiment of the following journal entry. Return the sentiment as a string (positive, negative, or neutral) and a sentiment score between -1 and 1.\n\nJournal Entry: {{{journalEntry}}}`,\n});\n\nconst analyzeSentimentFlow = ai.defineFlow(\n  {\n    name: 'analyzeSentimentFlow',\n    inputSchema: AnalyzeSentimentInputSchema,\n    outputSchema: AnalyzeSentimentOutputSchema,\n  },\n  async input => {\n    const {output} = await analyzeSentimentPrompt(input);\n    return output!;\n  }\n);\n\n"],"names":[],"mappings":";;;;;IA2BsB","debugId":null}},
    {"offset": {"line": 1147, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Slider } from '@/components/ui/slider';\nimport { Popover, PopoverTrigger, PopoverContent } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Input } from '@/components/ui/input'; // Retained for potential future use, though not directly used by GAE\nimport { useToast } from '@/hooks/use-toast';\nimport JournalEditor from '@/components/reflectify/JournalEditor';\nimport SentimentDisplay from '@/components/reflectify/SentimentDisplay';\nimport ProgressChart from '@/components/reflectify/ProgressChart';\nimport type { JournalEntry, ChartDataPoint } from '@/types'; \nimport { analyzeSentiment, type AnalyzeSentimentOutput } from '@/ai/flows/analyze-sentiment';\nimport { format, parseISO, eachDayOfInterval, subDays } from 'date-fns';\nimport { CalendarIcon, Loader2, Save, ChevronsRight, Lightbulb, Star, Sun, Award, PlusCircle, MinusCircle } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport Link from 'next/link'; // Retained for potential future use\nimport { ListOrdered, HelpCircle, Workflow, UserCog, CheckSquare, Eye, MessagesSquare, Triangle, Users, Wand } from 'lucide-react'; // Retained for potential future use\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'; // Retained for potential future use\n\nconst JOURNAL_HISTORY_KEY = 'quickGoalsIIJournalHistory';\nconst FOCUSED_GOAL_VISION_ID_KEY = 'quickGoalsIICurrentFocusedGoalVisionId';\nconst FOCUSED_GOAL_VISION_TYPE_KEY = 'quickGoalsIICurrentFocusedGoalVisionType';\n\nconst initialInBetweenOutcome1Placeholder = \"e.g, March 10th. Coaching group. six participants, this is the third group since I set up my website. The website has done well and many prospects are contacting me online because of it. The copywriter that I found has done a great job. His text on my site is great\";\nconst initialInBetweenOutcome2Placeholder = \"e.g,February 20th. My website is ready. I am very happy with the way it was crafted. My paying clients who learned about it from an advertisement in XY magazine. It was a great choice. My clients are so happy with my system that I have atelast 3 clients every month who heard from me from recommendations from my satisfied clients. Almost all continue to work with me after our session.\";\nconst initialInBetweenOutcome3Placeholder = \"e.g, January 10th. Finished my first group workshop, with 6 participants. All very happy and enthusiastic about the system. I know they all understand the system very well and that they will be able to practise it solo.\";\nconst initialInBetweenOutcome4Placeholder = \"e.g, December 10th. I have 3 clients interested in my workshop. I know that I am ready to do a group workshop. I called my friend and his supervision for the group workshop is arranged.\";\nconst initialInBetweenOutcome5Placeholder = \"e.g, September 7th (this afternoon). Finished the workahop. I have complete confidence that I will suceed in achieving my goals. I know exactly what to do, and the whole process is clear to me. I am eager to start doing things that will draw me closer to my accomplisment (I have a list of actions which I will take tonight for achieving my goal)\";\n\nconst inBetweenOutcomePlaceholders = [\n  initialInBetweenOutcome1Placeholder,\n  initialInBetweenOutcome2Placeholder,\n  initialInBetweenOutcome3Placeholder,\n  initialInBetweenOutcome4Placeholder,\n  initialInBetweenOutcome5Placeholder,\n  \"Enter additional outcome 6...\",\n  \"Enter additional outcome 7...\",\n  \"Enter additional outcome 8...\",\n  \"Enter additional outcome 9...\",\n  \"Enter additional outcome 10...\",\n];\n\nexport default function QuickGoalsPage() {\n  const [goalText, setGoalText] = useState<string>('');\n  const [goalAchievability, setGoalAchievability] = useState<number>(5);\n  const [goalDeadline, setGoalDeadline] = useState<Date | undefined>();\n\n  const [journalEntryText, setJournalEntryText] = useState<string>(''); // For Additional Characteristics\n  const [goalAchievementExperienceText, setGoalAchievementExperienceText] = useState<string>('');\n  const [bestCaseScenarioText, setBestCaseScenarioText] = useState<string>('');\n  const [inBetweenOutcomes, setInBetweenOutcomes] = useState<string[]>(['', '', '']);\n\n\n  const [currentSentiment, setCurrentSentiment] = useState<AnalyzeSentimentOutput | null>(null);\n  const [journalHistory, setJournalHistory] = useState<JournalEntry[]>([]);\n  const [isLoadingAi, setIsLoadingAi] = useState<boolean>(false);\n  const [chartData, setChartData] = useState<ChartDataPoint[]>([]);\n  const { toast } = useToast();\n  \n  const [focusedGoalVision, setFocusedGoalVision] = useState<{ type: string; text: string; date?: string, icon?: React.ElementType } | null>(null);\n\n\n  useEffect(() => {\n    try {\n      const storedHistory = localStorage.getItem(JOURNAL_HISTORY_KEY);\n      let localJournalHistory: JournalEntry[] = [];\n      if (storedHistory) {\n        localJournalHistory = JSON.parse(storedHistory);\n        setJournalHistory(localJournalHistory);\n      }\n\n      const focusedId = localStorage.getItem(FOCUSED_GOAL_VISION_ID_KEY);\n      const focusedType = localStorage.getItem(FOCUSED_GOAL_VISION_TYPE_KEY);\n\n      if (focusedId && focusedType && localJournalHistory.length > 0) {\n        const entry = localJournalHistory.find(e => e.id === focusedId);\n        if (entry) {\n          let textToShow = '';\n          let typeString = '';\n          let IconComponent: React.ElementType | undefined = undefined;\n\n          if (focusedType === 'bestCaseScenario' && entry.bestCaseScenarioText) {\n            textToShow = entry.bestCaseScenarioText;\n            typeString = 'Your Envisioned Best Case Scenario';\n            IconComponent = Sun;\n          } else if (focusedType === 'goalAchievementExperience' && entry.goalAchievementExperienceText) {\n            textToShow = entry.goalAchievementExperienceText;\n            typeString = 'Your Envisioned Goal Achievement Experience';\n            IconComponent = Award;\n          }\n\n          if (textToShow) {\n            setFocusedGoalVision({ type: typeString, text: textToShow, date: entry.date, icon: IconComponent });\n          } else {\n            setFocusedGoalVision(null); \n          }\n        } else {\n          setFocusedGoalVision(null); \n        }\n      } else {\n        setFocusedGoalVision(null); \n      }\n\n    } catch (error) {\n      console.error(\"Failed to load journal history or focused vision from localStorage:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Could not load your journal history or focused vision.\",\n        variant: \"destructive\",\n      });\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    const today = new Date();\n    const dateInterval = eachDayOfInterval({\n      start: subDays(today, 6),\n      end: today\n    });\n    \n    const dataForChart = dateInterval.map(date => {\n      const isoDateString = date.toISOString().split('T')[0];\n      const entryForDay = journalHistory.find(entry => entry.date.startsWith(isoDateString));\n      return {\n        date: format(date, 'MMM dd'),\n        name: format(date, 'EEEE, MMM dd, yyyy'),\n        sentimentScore: entryForDay?.sentimentAnalysis?.score ?? null,\n      };\n    });\n    setChartData(dataForChart);\n  }, [journalHistory]);\n\n  const handleAddInBetweenOutcome = () => {\n    if (inBetweenOutcomes.length < 10) {\n      setInBetweenOutcomes(prev => [...prev, '']);\n    }\n  };\n\n  const handleRemoveInBetweenOutcome = (index: number) => {\n    if (inBetweenOutcomes.length > 3 && index >=3) { // Ensure at least 3 outcomes remain and only remove from index 3 onwards\n      setInBetweenOutcomes(prev => prev.filter((_, i) => i !== index));\n    }\n  };\n\n  const handleInBetweenOutcomeChange = (index: number, value: string) => {\n    setInBetweenOutcomes(prev => prev.map((item, i) => (i === index ? value : item)));\n  };\n\n\n  const handleJournalSubmit = useCallback(async () => {\n    if (!goalText.trim() && \n        !journalEntryText.trim() && \n        !goalAchievementExperienceText.trim() && \n        !bestCaseScenarioText.trim() &&\n        inBetweenOutcomes.every(o => !o.trim())\n        ) { \n        toast({\n            title: 'Empty Entry',\n            description: 'Please describe your goal, characteristics, achievement experience, best case scenario, or in-between outcomes.', \n            variant: 'default',\n        });\n        return;\n    }\n\n    setIsLoadingAi(true);\n    setCurrentSentiment(null);\n    try {\n      let sentimentResult: AnalyzeSentimentOutput | null = null;\n      // Analyze sentiment of additional characteristics if present\n      if (journalEntryText.trim()) {\n        sentimentResult = await analyzeSentiment({ journalEntry: journalEntryText });\n        setCurrentSentiment(sentimentResult);\n      }\n\n      const newEntry: JournalEntry = {\n        id: new Date().toISOString(),\n        date: new Date().toISOString(),\n        goalText: goalText.trim() ? goalText.trim() : undefined,\n        goalAchievability: goalText.trim() ? goalAchievability : undefined, \n        goalDeadline: goalText.trim() && goalDeadline ? goalDeadline.toISOString() : undefined, \n        entryText: journalEntryText.trim() ? journalEntryText.trim() : undefined, // This now specifically stores \"Additional Characteristics\"\n        sentimentAnalysis: sentimentResult ?? undefined, // Sentiment of \"Additional Characteristics\"\n        goalAchievementExperienceText: goalAchievementExperienceText.trim() ? goalAchievementExperienceText.trim() : undefined,\n        bestCaseScenarioText: bestCaseScenarioText.trim() ? bestCaseScenarioText.trim() : undefined,\n        ...inBetweenOutcomes.reduce((acc, outcome, index) => {\n          if (index < 10) {\n            acc[`inBetweenOutcome${index + 1}` as keyof JournalEntry] = outcome.trim() ? outcome.trim() : undefined;\n          }\n          return acc;\n        }, {} as Partial<JournalEntry>),\n      };\n      \n      // Update focused vision if GAE or BCS is submitted on this page\n      if (newEntry.goalAchievementExperienceText) {\n        localStorage.setItem(FOCUSED_GOAL_VISION_ID_KEY, newEntry.id);\n        localStorage.setItem(FOCUSED_GOAL_VISION_TYPE_KEY, 'goalAchievementExperience');\n        setFocusedGoalVision({\n          type: 'Your Envisioned Goal Achievement Experience',\n          text: newEntry.goalAchievementExperienceText,\n          date: newEntry.date,\n          icon: Award,\n        });\n      } else if (newEntry.bestCaseScenarioText) { // Prioritize GAE if both are filled, else BCS\n        localStorage.setItem(FOCUSED_GOAL_VISION_ID_KEY, newEntry.id);\n        localStorage.setItem(FOCUSED_GOAL_VISION_TYPE_KEY, 'bestCaseScenario');\n        setFocusedGoalVision({\n          type: 'Your Envisioned Best Case Scenario',\n          text: newEntry.bestCaseScenarioText,\n          date: newEntry.date,\n          icon: Sun,\n        });\n      }\n\n\n      setJournalHistory(prevHistory => {\n        const updatedHistory = [newEntry, ...prevHistory];\n        try {\n          localStorage.setItem(JOURNAL_HISTORY_KEY, JSON.stringify(updatedHistory));\n        } catch (error) {\n          console.error(\"Failed to save journal history to localStorage:\", error);\n          toast({\n            title: \"Storage Error\",\n            description: \"Could not save your journal entry due to storage limitations.\",\n            variant: \"destructive\",\n          });\n        }\n        return updatedHistory;\n      });\n\n      setGoalText('');\n      setGoalAchievability(5);\n      setGoalDeadline(undefined);\n      setJournalEntryText('');\n      setGoalAchievementExperienceText('');\n      setBestCaseScenarioText('');\n      setInBetweenOutcomes(['', '', '']);\n      // currentSentiment is reset at the beginning of the handler, so no need to reset here if only related to journalEntryText\n\n\n      toast({\n        title: 'Journal Saved',\n        description: 'Your goal and reflections have been recorded.',\n      });\n    } catch (error) {\n      console.error('Error processing or saving journal:', error);\n      toast({\n        title: 'Error',\n        description: 'Could not process or save your journal. Please try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoadingAi(false);\n    }\n  }, [toast, goalText, goalAchievability, goalDeadline, journalEntryText, goalAchievementExperienceText, bestCaseScenarioText, inBetweenOutcomes]); \n\n  const additionalCharacteristicsPlaceholder = `-My personal income has to be at least $5,000 a month\n-I need to create this business that will provide me with a lot of free time and work less than 4 hours a day\n-I need to enjoy my work as much as I did when I was studying theater arts 5 years ago\n-People that work with me have a sense of humour\n-My business will allow me to travel and meet lots of new people`;\n\n  const goalAchievementExperiencePlaceholder = \"e.g., It is 16 March 2016, I come home after work, I embrace my daughter on the lawn infront of my house. I arrive in our new car, which was completely paid for in cash, I have a surprise for my wife: summer vacation in Thailand. I know we can afford it because I have doubled my income in the last six months. I will achieve this outcome, or one even more favorable for me, in reality before the summer of 2016, for the highest good to me and all others involved.\";\n  \n  const bestCaseScenarioPlaceholder = \"e.g, March 10th. Coaching group. six participants, this is the third group since I set up my website. The website has done well and many prospects are contacting me online because of it. The copywriter that I found has done a great job. His text on my site is great\";\n\n\n  return (\n    <div className=\"container mx-auto max-w-3xl py-8 px-4 flex flex-col gap-8\">\n      {focusedGoalVision && (\n        <Card className=\"shadow-lg rounded-xl overflow-hidden border-2 border-primary/50 bg-primary/5\">\n          <CardHeader>\n            <CardTitle className=\"text-xl font-semibold text-primary-foreground flex items-center\">\n               {focusedGoalVision.icon && <focusedGoalVision.icon className=\"mr-3 h-6 w-6 text-primary\" />}\n              Your Current Goal Focus\n            </CardTitle>\n             {focusedGoalVision.date && (\n                <CardDescription className=\"text-sm text-muted-foreground pt-1\">\n                    Saved on: {format(parseISO(focusedGoalVision.date), 'PPP p')}\n                </CardDescription>\n            )}\n          </CardHeader>\n          <CardContent className=\"pt-2\">\n            <h3 className=\"text-md font-medium text-foreground mb-2\">{focusedGoalVision.type}</h3>\n            <p className=\"text-base text-foreground whitespace-pre-wrap\">{focusedGoalVision.text}</p>\n          </CardContent>\n        </Card>\n      )}\n\n      <Card className=\"shadow-lg rounded-xl overflow-hidden\">\n        <CardHeader className=\"bg-primary/30\">\n          <CardTitle className=\"text-xl font-semibold text-primary-foreground\">\n            My Goal\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"pt-6 space-y-6\">\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"goalText\" className=\"text-base\">Write down your goal</Label>\n            <Textarea \n              id=\"goalText\" \n              value={goalText} \n              onChange={(e) => setGoalText(e.target.value)} \n              placeholder=\"e.g., Make $5,000 a month, finding the perfect partner\" \n              rows={3}\n              className=\"text-base leading-relaxed shadow-sm focus:ring-2 focus:ring-ring\"\n            />\n          </div>\n\n          <div className=\"space-y-3\">\n            <Label htmlFor=\"goalAchievability\" className=\"text-base\">Rate the difficulty of your goal (0-10)</Label>\n             <p className=\"text-sm text-muted-foreground\">\n              Choose a goal that ranges from 5 to 8 on the difficulty scale, where 0 would naturally accomplish your goal and 10 would be practically impossible for you to achieve.\n            </p>\n            <div className=\"flex items-center gap-4\">\n              <Slider\n                id=\"goalAchievability\"\n                min={0}\n                max={10}\n                step={1}\n                value={[goalAchievability]}\n                onValueChange={(value) => setGoalAchievability(value[0])}\n                className=\"flex-grow\"\n                aria-label=\"Goal achievability slider\"\n              />\n              <span className=\"text-base font-medium w-10 text-right text-foreground\">{goalAchievability}</span>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"goalDeadlineButton\" className=\"text-base\">Set a deadline</Label>\n            <Popover>\n              <PopoverTrigger asChild>\n                <Button\n                  id=\"goalDeadlineButton\"\n                  variant={\"outline\"}\n                  className={cn(\n                    \"w-full justify-start text-left font-normal text-base py-3 h-auto\",\n                    !goalDeadline && \"text-muted-foreground\"\n                  )}\n                >\n                  <CalendarIcon className=\"mr-2 h-5 w-5\" />\n                  {goalDeadline ? format(goalDeadline, \"PPP\") : <span>Pick a date</span>}\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                <Calendar\n                  mode=\"single\"\n                  selected={goalDeadline}\n                  onSelect={setGoalDeadline}\n                  initialFocus\n                  disabled={(date) => date < new Date(new Date().setHours(0,0,0,0))}\n                />\n              </PopoverContent>\n            </Popover>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-lg rounded-xl overflow-hidden\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold text-foreground\">\n            Additional characteristics\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-2 pt-6\"> \n            <JournalEditor\n              value={journalEntryText}\n              onChange={setJournalEntryText}\n              placeholder={additionalCharacteristicsPlaceholder}\n            />\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-lg rounded-xl overflow-hidden\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold text-foreground flex items-center\">\n            <Award className=\"mr-3 h-6 w-6 text-primary\" />Goal Achievement Experience\n          </CardTitle>\n          <CardDescription className=\"text-base text-muted-foreground pt-2\">\n            Write down the future experience which you will have when you achieve your goal.\n            Make your GAE perfect 10/10. Adding the date and safety statement at the end of your GAE.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"pt-6\">\n          <Textarea\n            id=\"goalAchievementExperience\"\n            value={goalAchievementExperienceText}\n            onChange={(e) => setGoalAchievementExperienceText(e.target.value)}\n            placeholder={goalAchievementExperiencePlaceholder}\n            rows={8}\n            className=\"text-base leading-relaxed shadow-sm focus:ring-2 focus:ring-ring\"\n          />\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-lg rounded-xl overflow-hidden\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold text-foreground flex items-center\">\n            <Sun className=\"mr-3 h-6 w-6 text-primary\" />Best Case Scenario\n          </CardTitle>\n          <CardDescription className=\"text-base text-muted-foreground pt-2\">\n            Pay attention to your Goal Achievement Experience, which experience happened before that? Repeat this exercise from your goal achievement experience to present time\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"pt-6 space-y-4\">\n          <Textarea\n            id=\"bestCaseScenario\"\n            value={bestCaseScenarioText}\n            onChange={(e) => setBestCaseScenarioText(e.target.value)}\n            placeholder={bestCaseScenarioPlaceholder}\n            rows={6}\n            className=\"text-base leading-relaxed shadow-sm focus:ring-2 focus:ring-ring\"\n          />\n          <div className=\"space-y-3\">\n            <h3 className=\"text-lg font-medium text-foreground\">In-between Outcomes</h3>\n            {inBetweenOutcomes.map((outcome, index) => (\n              <div key={index} className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <Label htmlFor={`inBetweenOutcome${index + 1}`} className=\"text-base\">\n                    Outcome {index + 1}\n                  </Label>\n                  {index >= 3 && ( // Only show remove button for outcomes after the first 3\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      onClick={() => handleRemoveInBetweenOutcome(index)}\n                      disabled={inBetweenOutcomes.length <= 3}\n                      className=\"h-8 w-8 text-destructive hover:bg-destructive/10\"\n                      aria-label={`Remove outcome ${index + 1}`}\n                    >\n                      <MinusCircle className=\"h-5 w-5\" />\n                    </Button>\n                  )}\n                </div>\n                <Textarea\n                  id={`inBetweenOutcome${index + 1}`}\n                  value={outcome}\n                  onChange={(e) => handleInBetweenOutcomeChange(index, e.target.value)}\n                  placeholder={inBetweenOutcomePlaceholders[index] || `Enter outcome ${index + 1}...`}\n                  rows={4}\n                  className=\"text-base leading-relaxed shadow-sm focus:ring-2 focus:ring-ring\"\n                />\n              </div>\n            ))}\n            {inBetweenOutcomes.length < 10 && (\n              <Button\n                variant=\"outline\"\n                onClick={handleAddInBetweenOutcome}\n                className=\"mt-2 w-full sm:w-auto\"\n                aria-label=\"Add new in-between outcome\"\n              >\n                <PlusCircle className=\"mr-2 h-5 w-5\" />\n                Add Outcome\n              </Button>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      <Button \n        onClick={handleJournalSubmit} \n        disabled={isLoadingAi || (\n            !goalText.trim() && \n            !journalEntryText.trim() && \n            !goalAchievementExperienceText.trim() && \n            !bestCaseScenarioText.trim() &&\n            inBetweenOutcomes.every(o => !o.trim())\n        )} \n        className=\"w-full sm:w-auto bg-accent text-accent-foreground hover:bg-accent/90 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-2 px-6 py-3 text-base rounded-lg shadow-md transition-all duration-150 ease-in-out hover:shadow-lg self-center\" \n        aria-label=\"Save Goal and Reflections\"\n      >\n        {isLoadingAi ? (\n          <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n        ) : (\n          <Save className=\"mr-2 h-5 w-5\" />\n        )}\n        Save\n      </Button>\n\n\n      {currentSentiment && journalEntryText.trim() && ( \n        <Card className=\"shadow-lg rounded-xl overflow-hidden\">\n          <CardHeader>\n            <CardTitle className=\"text-xl font-semibold text-foreground\">\n              Sentiment Analysis of Additional characteristics\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <SentimentDisplay\n              sentiment={currentSentiment.sentiment}\n              score={currentSentiment.score}\n            />\n          </CardContent>\n        </Card>\n      )}\n\n      <Card className=\"shadow-lg rounded-xl overflow-hidden\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold text-foreground\">\n            Trend (Last 7 Days)\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ProgressChart data={chartData} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n\n    \n\n"],"names":[],"mappings":"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","debugId":null}}]
}